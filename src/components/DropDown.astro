---
interface FAQItem {
  question: string;
  answer: string;
}

import FaqData from "@data/faq.json";
const faqs: FAQItem[] = FaqData.faq;
---

<article>
  <div class="accordion" data-accordion>
    {
      faqs.map((q: FAQItem) => (
        <details class="item">
          <summary>{q.question}</summary>
          <div class="answer-wrapper">
            <p class="answer">{q.answer}</p>
          </div>
        </details>
      ))
    }
  </div>
</article>

<style>
  article {
    width: 100%;
  }

  .heading {
    text-align: center;
    margin-bottom: 3rem;
  }

  .item {
    border-bottom: 1px solid #d0d0d0;
    padding: 1.5rem 0;
  }

  .item summary {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.25rem;
    font-weight: 500;
    cursor: pointer;
    list-style: none;
    color: #1a1a1a;
    user-select: none;
    position: relative;
    transition: color 0.3s ease;
  }

  .item summary::-webkit-details-marker {
    display: none;
  }

  .item > summary::after {
    content: "+";
    color: var(--color-text);
    font-weight: 700;
    transition:
      transform 0.3s ease,
      opacity 0.2s ease;
  }

  .item[open] > summary::after {
    content: "-";
    font-size: xx-large;
    transform: rotate(180deg);
  }

  .answer-wrapper {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.3s ease;
  }

  .item[open] .answer-wrapper {
    grid-template-rows: 1fr;
  }

  .answer {
    overflow: hidden;
    margin: 0;
    padding-right: 2.5rem;
    color: #666;
    line-height: 1.7;
    font-size: 1rem;
    white-space: pre-line;
  }

  .item[open] .answer {
    margin-top: 1rem;
    animation: fadeIn 0.4s ease;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
